name: project-million
services:
    api:
        profiles: ["backend"]
        image: realestate-api:v1.0
        build:
            context: .
            dockerfile: src/RealEstate.Api/Dockerfile
        hostname: million-api
        container_name: million-api
        depends_on:
            - db
        env_file: 
            - path: ./request/.env
              required: true
            - path: .env
              required: true
        ports:
            - "5050:8080"
        # healthcheck:
        #     test: ["CMD-SHELL","curl -f http://million-api:8080/ || exit 1"]
        #     interval: 10s
        #     retries: 3
        #     timeout: 3s
        #     start_period: 10s
        networks:
            network-back:
                priority: 0
    healthcheck:
        profiles: ["backend"]
        container_name: healthcheck-curl
        restart: always 
        image: curlimages/curl:latest
        entrypoint: ["/bin/sh", "-c", "--", "while true; do sleep 30; done;"]
        depends_on:
            - api
        healthcheck:
            test: ["CMD", "curl", "-f", "http://million-api:8080/WeatherForecast"]
            interval: 10s
            timeout: 3s
            retries: 5
        networks:
            network-back:
                priority: 0
    db:
        profiles: ["backend"]
        # build: .
        hostname: mssql-db
        container_name: mssql-db
        image: mcr.microsoft.com/mssql/server:2019-latest
        env_file:
            - path: .env
              required: true
        ports:
            - "1435:1433"
        restart: always
        command: /bin/bash ./entrypoint.sh
        healthcheck:
            test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S mssql-db -U sa -P ${MSSQL_SA_PASSWORD} -C -Q 'SELECT 1' || exit 1"]
            interval: 10s
            retries: 5
            start_period: 10s
            timeout: 3s
        networks:
            network-back:
                priority: 0
        volumes:
            - api-data:/var/opt/mssql/
            # - mssql-log:/var/opt/mssql/log/
            # - mssql-secrets:/var/opt/mssql/secrets/
            - ./db/entrypoint.sh:/entrypoint.sh
            - ./db/configure-db.sh:/configure-db.sh
            - ./db/setup-db.sql:/db/setup-db.sql
networks:
    network-back:
        name: network-back
        driver: bridge
volumes:
    api-data:
        name: api-data
    mssql-data:
        name: mssql-data
        external: true
    # mssql-log:
    #     name: mssql-log
    # mssql-secrets:
    #     name: mssql-secrets